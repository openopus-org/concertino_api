<?
  include_once ("../../../lib/inc.php");

  // try to find the work in the database

  $work = openopusdownparse ("work/detail/{$_REQUEST["id"]}.json");

  if (!$work)
  {
    // if the work doesn't exist, return an error

    $apireturn["status"] = Array ("success"=>"false", "error"=>"Work not found");
  }
  else
  {
    // work exists

    $apireturn["work"] = $work["work"];
    $apireturn["work"]["composer"] = $work["composer"];
    
    // searching apple music

    $wid = $work["work"]["id"];
    $ii = -1;

    $spot = fetchapple ($work, "albums", $_REQUEST["offset"], $_REQUEST["limitpage"], $_REQUEST["country"], $_REQUEST["extra"]);

    // guessing the performers

    $perfs = openopusdownparse ("dyn/performer/list/", ["names"=>json_encode ($spot["extras"]["allperformers"])]);
    $rldb = $perfs["performers"]["digest"];

    // adding extradata to apple music results -- temporarily disabled

    //$spot = extradata ($spot, Array ("wid"=>$_REQUEST["id"]));

    // preparing data 

    $spotres = $spot["items"];

    foreach ($spotres as $album)
    {
      foreach ($album as $alb)
      {
        // detecting multiple recordings of a same work in an album

        $fullperformers = allperformers ($alb["performers"], $rldb, $apireturn["work"]["composer"]["complete_name"]);
        $performers = array_slice ($fullperformers, -2, 2, true);
        $newkey = "wkid-". $_REQUEST["id"]. "-". $alb["apple_albumid"] . "-". slug(implode ("-", arraykeepvalues ($performers, ["name"])));

        $return[$newkey] = Array
        (
          "year" => explode ("-", $alb["year"])[0],
          "cover" => $alb["apple_imgurl"],
          "apple_albumid" => $alb["apple_albumid"],
          "recording_id" => $newkey,
          "album_name" => $alb["album_name"],
          "singletrack" => ($alb["tracks"] > 1) ? "false" : "true",
          "compilation" => $alb["compilation"] ? "true" : "false",
          "observation" => $alb["observation"],
          "performers" => $fullperformers,
          //"performers" => ($alb["extraperformers"]) ? orderperformers ($alb["extraperformers"]) : allperformers ($alb["performers"], $rldb, $apireturn["work"]["composer"]["complete_name"]),
          "set" => ($alb["subset"]) ? intval ($alb["subset"]) : 1,
          //"set" => (Int) $alb["apple_trackid"],
          "historic" => $alb["historic"] ? "true" : "false",
          "verified" => $alb["verified"] ? "true" : "false",
          "recommended" => $alb["recommended"] ? "true" : "false"
        );

        if ($alb["verified"])
        {
          $vreturn[$newkey] = $return[$newkey];
          unset ($return[$newkey]);
        }
      }
    }

    $apireturn["recordings"] = (sizeof ($vreturn) ? array_merge ($vreturn, $return) : $return);
    $apireturn["recordings"] = array_values ($apireturn["recordings"]);

    if ($spot["extras"]["next"]) 
    {
      parse_str (parse_url ($spot["extras"]["next"])["query"], $next);
      $apireturn["next"] = $next["offset"];
    }

    // compilation detection

    if (isset ($apireturn["recordings"]))
    {
      $apireturn["status"] = Array ("success"=>"true", "source" => "ext", "stats"=> $spot["stats"], "country"=>($_REQUEST["country"] ? $_REQUEST["country"] : "us"));
      if ($_REQUEST["extra"]) $apireturn["status"]["extra_search"] = $_REQUEST["extra"];
      
      $apireturn = compilationdigest ($apireturn);

      if ($_REQUEST["country"])
      {
        if ($_REQUEST["extra"])
        {
          echo savecache ("/recording/{$_REQUEST["country"]}/list/work/{$_REQUEST["id"]}/{$_REQUEST["extra"]}/{$_REQUEST["offset"]}.json", apireturn ($apireturn));
        }
        else
        {
          echo savecache ("/recording/{$_REQUEST["country"]}/list/work/{$_REQUEST["id"]}/{$_REQUEST["offset"]}.json", apireturn ($apireturn));
        }
      }
      else
      {
        if ($_REQUEST["extra"])
        {
          echo savecache ("/recording/list/work/{$_REQUEST["id"]}/{$_REQUEST["extra"]}/{$_REQUEST["offset"]}.json", apireturn ($apireturn));
        }
        else
        {
          echo savecache ("/recording/list/work/{$_REQUEST["id"]}/{$_REQUEST["offset"]}.json", apireturn ($apireturn));
        }
      }
    }
    else
    {
      $apireturn["status"] = Array ("success"=>"false", "source" => "ext", "error"=>"No recordings found", "stats"=> $spot["stats"]);
      if ($_REQUEST["extra"]) $apireturn["status"]["extra_search"] = $_REQUEST["extra"];
      unset ($apireturn["recordings"]);

      echo apireturn ($apireturn);
    }
  }